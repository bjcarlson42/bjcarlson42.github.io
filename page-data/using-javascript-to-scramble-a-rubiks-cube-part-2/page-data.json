{"componentChunkName":"component---src-templates-blog-post-js","path":"/using-javascript-to-scramble-a-rubiks-cube-part-2/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"d7ec32c8-41fe-5fe8-9334-1d8be47e0bb5","excerpt":"Introduction This is a follow up post to the post I wrote just the other day on scrambling a Rubik’s Cube with JavaScript. If you haven’t read that post yet be…","html":"<h2>Introduction</h2>\n<p>This is a follow up post to the post I wrote just the other day on scrambling a Rubik’s Cube with JavaScript. If you haven’t read that post yet be sure to check it out <a href=\"https://benjamincarlson.net/javascript/tutorial/rubiks%20cube/2020/02/28/using-javascript-to-scramble-a-rubiks-cube.html\">here</a>{:target=“_blank”} and then come back to this post. In this post, I will improve the JavaScript scrambler. To do that, we will unfortunately have to rewrite most of the code, but the fundamental design stays the same. Let’s get to it!</p>\n<p>{% include under-p1-ad.html %}</p>\n<h2>What’s a Scramble</h2>\n<p>You should already know what a Rubik’s cube scramble is (assuming you read the first post), however, here is a quick refresher just in case. A scramble is a sequence of 20 moves that are performed on a solved cube. These 20 moves are picked randomly from the following set of moves:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token constant\">F</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token string\">', R'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token string\">', B'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token string\">', D'</span></code></pre></div>\n<p>Here are some example scrambles:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token constant\">B2</span> <span class=\"token constant\">R</span> <span class=\"token constant\">F</span><span class=\"token string\">' L2 R B L2 F'</span> <span class=\"token constant\">D</span><span class=\"token string\">' L2 F L2 R'</span> <span class=\"token constant\">U</span> <span class=\"token constant\">B</span> <span class=\"token constant\">D</span><span class=\"token string\">' F D'</span> <span class=\"token constant\">U2</span> <span class=\"token constant\">R</span>' \n    <span class=\"token constant\">B</span><span class=\"token string\">' D U2 F'</span> <span class=\"token constant\">L</span> <span class=\"token constant\">U</span><span class=\"token string\">' R2 L'</span> <span class=\"token constant\">D</span> <span class=\"token constant\">B</span> <span class=\"token constant\">D</span><span class=\"token string\">' R2 B'</span> <span class=\"token constant\">F</span>' <span class=\"token constant\">R2</span> <span class=\"token constant\">B2</span> <span class=\"token constant\">D2</span> <span class=\"token constant\">R</span> <span class=\"token constant\">B</span> <span class=\"token constant\">D2</span> \n    <span class=\"token constant\">L</span><span class=\"token string\">' R2 U2 F U'</span> <span class=\"token constant\">B</span><span class=\"token string\">' D2 B D B'</span> <span class=\"token constant\">F2</span> <span class=\"token constant\">U</span> <span class=\"token constant\">R2</span> <span class=\"token constant\">F2</span> <span class=\"token constant\">U</span><span class=\"token string\">' L2 B2 R2 L U'</span></code></pre></div>\n<h2>The Problem</h2>\n<p>The problem with the last post was that our scrambling algorithm doesn’t account for the possibility of 2 of the same move being next to each other. For example, we might get a scrambles that look like these:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token constant\">B2</span> <span class=\"token constant\">R</span> <span class=\"token constant\">F</span><span class=\"token string\">' L2 R B L2 F'</span> <span class=\"token constant\">L</span><span class=\"token string\">' L2 F L2 R'</span> <span class=\"token constant\">U</span> <span class=\"token constant\">B</span> <span class=\"token constant\">D</span><span class=\"token string\">' F D'</span> <span class=\"token constant\">U2</span> <span class=\"token constant\">R</span>' \n    <span class=\"token constant\">B</span><span class=\"token string\">' D U2 F'</span> <span class=\"token constant\">L</span> <span class=\"token constant\">U</span><span class=\"token string\">' R2 R2 D B D'</span> <span class=\"token constant\">R2</span> <span class=\"token constant\">B</span><span class=\"token string\">' F'</span> <span class=\"token constant\">R2</span> <span class=\"token constant\">B2</span> <span class=\"token constant\">D2</span> <span class=\"token constant\">R</span> <span class=\"token constant\">B</span> <span class=\"token constant\">D2</span> \n    <span class=\"token constant\">L</span><span class=\"token string\">' R2 U2 F U'</span> <span class=\"token constant\">B</span><span class=\"token string\">' D2 B D B'</span> <span class=\"token constant\">F2</span> <span class=\"token constant\">U</span> <span class=\"token constant\">R2</span> <span class=\"token constant\">D</span> <span class=\"token constant\">D</span> <span class=\"token constant\">L2</span> <span class=\"token constant\">B2</span> <span class=\"token constant\">R2</span> <span class=\"token constant\">L</span> <span class=\"token constant\">U</span>'</code></pre></div>\n<p>At first these scrambles might not look like an issue, however if you look closer, you will see that the first scramble has a L’ and a L2 directly next to each other. The last scramble has two D moves next to each other. This makes no sense. Take the last scramble for example. It’s the one with two D moves next to each other. That is the same as saying D2. Essentially, that scramble is now 19 moves, not 20. This is a problem, especially when we get 3 or 4 moves like this in our scrambles </p>\n<p>Additionally, having a R followed by an R’ makes no sense because they just cancel each other out! All we did was move the cube twice to get to the same spot. When this happens multiple times in a scramble, our scrambles could be 15 or less moves instead of 20! </p>\n<h2>The Fix</h2>\n<p>This may seem like a simple fix but it is not quite that easy. It is hard to check if 2 adjacent moves are the same type. We need to think about solving this in a different way than we did last time. Let’s take a look at the options for each scramble again. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token constant\">F</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D2</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token string\">', R'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token string\">', B'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token string\">', D'</span></code></pre></div>\n<p>We can see that there are 6 different moves by letter. There is F, R, U, B, L, and D. Furthermore, there are 3 different moves for each of these. A single clockwise move (F), a double move (F2), and single counter clockwise move (F’). These make up our 18 possible moves (6 x 3 = 18). </p>\n<p>We can use numbers to represent the scramble. We will assign F to 0, B to 1, and so on. Then at the end, we can substitute the letters back in and can be sure that no of the same letters will be next to each other.</p>\n<h2>Coding the Solution in JavaScript</h2>\n<p>We can now approach this problem using this knowledge. Let’s start off by giving each of the 6 possibilities a number 0 through 6 and store them in an array. We will call this array numOptions.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">var</span> numOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Now, we can randomly add these numbers to another array named scramble until we have 20 random letters in the array. Remember, a Rubik’s cube scramble is 20 moves. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">var</span> scramble <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// initialize to empty</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scramble<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>numOptions<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomint</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// random int code from last tutorial</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// returns up to max - 1</span>\n        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, we have an array of 20 random numbers from 0 to 5! Now, some of you are thinking, we still have the same problem as last time. If that’s you, you’re absolutely right. We still have the possibility for a two 3’s to be next to each other or two 1’s. However, since we are using numbers (as opposed to letters), it is super easy to loop through the array and check this. We can now write code to generate an array of 20 numbers, loop though and check to see if any of the same number are next to each other, and if they are, generate the array again. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">var</span> bad <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bad<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scramble <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            scramble<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>numOptions<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// check if moves directly next to each other are the same letter</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scramble<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> scramble<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                bad <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                bad <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>To briefly explain the code above: we declare a boolean bad and set it to true. The next block of code we already saw. Then, we check the scramble by looping through the array. It compares the value at index 0 to the value at index 1. If they are not equal it moves on and checks the rest of the array in the same fashion. If at any point two numbers are equal, it breaks, regenerates the scramble, and checks again.</p>\n<h2>Adding the Letters</h2>\n<p>The final step is to substitute letters for the numbers. We will do this by declaring an array of all possible options and then writing a switch statement nested inside a for loop to substitute the right letters for each number.</p>\n<p>Ex. If the number is 3, we will place either a B, B2, or B’ (randomly of course). </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D'\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> move\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>scramble<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 0,1,2</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 3,4,5</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 6,7,8</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 9,10,11</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 12,13,14</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 15,16,17</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token keyword\">function</span> <span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span> max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// return a number from min to max - 1. Ex. 3, 9 returns 3 - 8</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You will notice we have another function that gets a random number between 2 numbers called getRandomIntBetween. I added this because we need to be able to get a random number between 2 numbers and our current randNum function only allowed us to get a random number from 0 to a specified number.</p>\n<p>Here is the final code:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeScramble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D'\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">var</span> numOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 0 = F, 1 = R, 2 = U, 3 = B, 4 = L, 5 = D</span>\n    <span class=\"token keyword\">var</span> scramble <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">var</span> scrambleMoves <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">var</span> bad <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bad<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scramble <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            scramble<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>numOptions<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// check if moves directly next to each other involve the same letter</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scramble<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> scramble<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                bad <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                bad <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>scramble<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// switch numbers to letters</span>\n    <span class=\"token keyword\">var</span> move\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>scramble<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 0,1,2</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 3,4,5</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 6,7,8</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 9,10,11</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 12,13,14</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n                move <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 15,16,17</span>\n                scrambleMoves<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>scrambleMoves<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// returns up to max - 1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getRandomIntBetween</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span> max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// return a number from min to max - 1. Ex. 3, 9 returns 3 - 8</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>After seeing how I solved this problem, can you solve it better? I would love to see if there is a better solution! If you give it a try, let me know in the comments. You can get the code for this tutorial on my <a href=\"https://github.com/bjcarlson42/blog-post-code/blob/master/Rubik&#x27;s%20Cube%20JavaScript%20Scrambler/part_two.js\">GitHub</a>{:target=“_blank”}.</p>","frontmatter":{"title":"JavaScript Rubik's Cube Scrambler Part 2!","date":"April 03, 2020","description":null}}},"pageContext":{"slug":"/using-javascript-to-scramble-a-rubiks-cube-part-2/","previous":{"fields":{"slug":"/react-native-quickstart/"},"frontmatter":{"title":"Create an IOS and Android app in under 5 minutes!"}},"next":null}}}